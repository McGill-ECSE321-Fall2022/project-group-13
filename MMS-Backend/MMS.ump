class MuseumManagementSystem
{
  unique Integer systemId;
  name;
  Time openTime;
  Time closeTime;
  Integer maxLoanNumber;
  
  Double ticketFee;
  1 <@>- 1 Manager manager;
  1 <@>- * Employee employees;
  1 <@>- * Client clients;
  1 <@>- * Shift shifts;
  1 <@>- * LoanRequest loanRequests;
  1 <@>- * DonationRequest donationRequests;
  1 <@>- * Artifact artifacts;
  1 <@>- * Room rooms;
  1 <@>- * Ticket tickets;
}

class Account
{
  abstract;
  unique username;
  name;
  password;
}

class Manager
{
  isA Account;
}

class Employee
{
  isA Account;
  
  1 employee <- * Shift shifts;
}

class Client
{
  isA Account;
  Integer currentLoanNumber;
  1 client <- * Request requests;
  1 client <- * Ticket tickets;
}

class Shift
{
  enum DayType { Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday }
  unique Integer shiftId;
  Time startTime;
  Time endTime;
  DayType dayType;
  Boolean isActive;
}

class Request
{
  abstract;
  unique Integer requestId;
}

class LoanRequest
{

  enum LoanStatus { Approved, Rejected, Pending, Returned}

  isA Request;
  Integer loanDuration;
  Double fee;
  LoanStatus status;
}

class DonationRequest
{
  enum DonationStatus { Approved, Rejected, Pending}
  isA Request;
  DonationStatus status;
}

class Artifact
{
  enum LoanStatus { Available, Unavailable, Loaned }
  unique Integer artifactId;
  name;
  image;
  description;
  LoanStatus loanStatus;
  Boolean isDamaged;
  Double loanFee;
  Double worth; 
  1 artifact <- * Request requests;
  * artifacts -> 1 Room roomLocation;
}

class Room
{
  enum RoomType { Small, Large, Storage }
  name;
  RoomType type;
  unique Integer roomId;
}

class Ticket
{
  unique Integer ticketId;
  Double fee;
  Boolean isActive;
}




namespace -;


