{
	"info": {
		"_postman_id": "55de0409-86a9-41ac-9c3e-d2b1ef7660d5",
		"name": "Action: ALL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24514474"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "MuseumManagementSystemRestController",
					"item": [
						{
							"name": "createValidMms",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"The response has all properties\", () => {",
											"    //parse the response JSON ",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.museumManagementSystemId).to.eql(1);",
											"    pm.expect(responseJson.name).to.eql(\"Museum Management System Default Name\");",
											"    pm.expect(responseJson.openingTime).to.eql(\"09:00:00\");",
											"    pm.expect(responseJson.closingTime).to.eql(\"17:00:00\");",
											"    pm.expect(responseJson.maxLoanNumber).to.eql(5);",
											"    pm.expect(responseJson.ticketFee).to.eql(0.0);",
											"",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.museumManagementSystemId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"mms1_id\", jsonData.museumManagementSystemId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms"
									]
								}
							},
							"response": []
						},
						{
							"name": "createInvalidMms",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ManagerAccountRestController",
					"item": [
						{
							"name": "createValidManager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/manager?username=SireMarwan&name=Marwan Kanaan&password=ecse321rocks&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"manager"
									],
									"query": [
										{
											"key": "username",
											"value": "SireMarwan"
										},
										{
											"key": "name",
											"value": "Marwan Kanaan"
										},
										{
											"key": "password",
											"value": "ecse321rocks"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createInvalidManager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/manager?username=QueenNazia&name=Queen Nazia&password=ok&systemId=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"manager"
									],
									"query": [
										{
											"key": "username",
											"value": "QueenNazia"
										},
										{
											"key": "name",
											"value": "Queen Nazia"
										},
										{
											"key": "password",
											"value": "ok"
										},
										{
											"key": "systemId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EmployeeAccountRestController",
					"item": [
						{
							"name": "createValidEmployee1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee?username=U123456&name=Mona Kalaoun&password=MonaMona123&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee"
									],
									"query": [
										{
											"key": "username",
											"value": "U123456"
										},
										{
											"key": "name",
											"value": "Mona Kalaoun"
										},
										{
											"key": "password",
											"value": "MonaMona123"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidEmployee2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee?username=U654321&name=Rosika Muthucumaru&password=Skipper213&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee"
									],
									"query": [
										{
											"key": "username",
											"value": "U654321"
										},
										{
											"key": "name",
											"value": "Rosika Muthucumaru"
										},
										{
											"key": "password",
											"value": "Skipper213"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createInvalidEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee?username=invalidEmployee&name=Mr Invalid&password=ok&systemId=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee"
									],
									"query": [
										{
											"key": "username",
											"value": "invalidEmployee"
										},
										{
											"key": "name",
											"value": "Mr Invalid"
										},
										{
											"key": "password",
											"value": "ok"
										},
										{
											"key": "systemId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ClientAccountRestController",
					"item": [
						{
							"name": "createClientValid1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client?username=NikolasPasichnik123&name=Nikolas Pasichnik&password=charly1234&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client"
									],
									"query": [
										{
											"key": "username",
											"value": "NikolasPasichnik123"
										},
										{
											"key": "name",
											"value": "Nikolas Pasichnik"
										},
										{
											"key": "password",
											"value": "charly1234"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createClientValid2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client?username=SamanthaInesPerezHoffman&name=Samantha Perez&password=Lucrecia123&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client"
									],
									"query": [
										{
											"key": "username",
											"value": "SamanthaInesPerezHoffman"
										},
										{
											"key": "name",
											"value": "Samantha Perez"
										},
										{
											"key": "password",
											"value": "Lucrecia123"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createClientValid3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client?username=YuAnlyA&name=Yu An Lu &password=DogPersonLover&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client"
									],
									"query": [
										{
											"key": "username",
											"value": "YuAnlyA"
										},
										{
											"key": "name",
											"value": "Yu An Lu "
										},
										{
											"key": "password",
											"value": "DogPersonLover"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createClientInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client?username=LucyZhang1234&name=Lucy Zhang&password=Nova&systemId=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client"
									],
									"query": [
										{
											"key": "username",
											"value": "LucyZhang1234"
										},
										{
											"key": "name",
											"value": "Lucy Zhang"
										},
										{
											"key": "password",
											"value": "Nova"
										},
										{
											"key": "systemId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ArtifactRestController",
					"item": [
						{
							"name": "createValidArtifact1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.artifactId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"artifact1_id\", jsonData.artifactId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifact/createArtifact?name=Mona Lisa&description=Painting&image=images/monalisa.jpg&status=Available&loanFee=10000000.0&isDamaged=false&worth=1000000000.0&roomId=12&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifact",
										"createArtifact"
									],
									"query": [
										{
											"key": "name",
											"value": "Mona Lisa"
										},
										{
											"key": "description",
											"value": "Painting"
										},
										{
											"key": "image",
											"value": "images/monalisa.jpg"
										},
										{
											"key": "status",
											"value": "Available"
										},
										{
											"key": "loanFee",
											"value": "10000000.0"
										},
										{
											"key": "isDamaged",
											"value": "false"
										},
										{
											"key": "worth",
											"value": "1000000000.0"
										},
										{
											"key": "roomId",
											"value": "12"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidArtifact2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.artifactId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"artifact2_id\", jsonData.artifactId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifact/createArtifact?name=Oranges&description=slices of oranges&image=images/orange.PNG&status=Loaned&loanFee=100.0&isDamaged=true&worth=500.0&roomId=12&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifact",
										"createArtifact"
									],
									"query": [
										{
											"key": "name",
											"value": "Oranges"
										},
										{
											"key": "description",
											"value": "slices of oranges"
										},
										{
											"key": "image",
											"value": "images/orange.PNG"
										},
										{
											"key": "status",
											"value": "Loaned"
										},
										{
											"key": "loanFee",
											"value": "100.0"
										},
										{
											"key": "isDamaged",
											"value": "true"
										},
										{
											"key": "worth",
											"value": "500.0"
										},
										{
											"key": "roomId",
											"value": "12"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidArtifact3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.artifactId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"artifact3_id\", jsonData.artifactId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifact/createArtifact?name=Cat&description=Royal cat&image=images/Cat.PNG&status=Unavailable&loanFee=100.0&isDamaged=false&worth=500.0&roomId=12&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifact",
										"createArtifact"
									],
									"query": [
										{
											"key": "name",
											"value": "Cat"
										},
										{
											"key": "description",
											"value": "Royal cat"
										},
										{
											"key": "image",
											"value": "images/Cat.PNG"
										},
										{
											"key": "status",
											"value": "Unavailable"
										},
										{
											"key": "loanFee",
											"value": "100.0"
										},
										{
											"key": "isDamaged",
											"value": "false"
										},
										{
											"key": "worth",
											"value": "500.0"
										},
										{
											"key": "roomId",
											"value": "12"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createInvalidArtifact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifact/createArtifact?name=OrangePainting&description=slices of oranges&image=images/orange.PNG&status=Available&loanFee=10.0&isDamaged=false&worth=-250.0&roomId=12&systemId=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifact",
										"createArtifact"
									],
									"query": [
										{
											"key": "name",
											"value": "OrangePainting"
										},
										{
											"key": "description",
											"value": "slices of oranges"
										},
										{
											"key": "image",
											"value": "images/orange.PNG"
										},
										{
											"key": "status",
											"value": "Available"
										},
										{
											"key": "loanFee",
											"value": "10.0"
										},
										{
											"key": "isDamaged",
											"value": "false"
										},
										{
											"key": "worth",
											"value": "-250.0"
										},
										{
											"key": "roomId",
											"value": "12"
										},
										{
											"key": "systemId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DonationRequestRestController",
					"item": [
						{
							"name": "createDonationArtifactValid1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.artifactId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"Dartifact1_id\", jsonData.artifactId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationArtifact?name=TheMonaLisa&image=MMS-backend/images/monalisa.jpg&description=A woman sitting there.&isDamaged=false&worth=10.0&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationArtifact"
									],
									"query": [
										{
											"key": "name",
											"value": "TheMonaLisa"
										},
										{
											"key": "image",
											"value": "MMS-backend/images/monalisa.jpg"
										},
										{
											"key": "description",
											"value": "A woman sitting there."
										},
										{
											"key": "isDamaged",
											"value": "false"
										},
										{
											"key": "worth",
											"value": "10.0"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDonationArtifactValid2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.artifactId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"Dartifact2_id\", jsonData.artifactId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationArtifact?name=TheCat&image=MMS-backend/images/Cat.PNG&description=Cat sitting&isDamaged=false&worth=5.0&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationArtifact"
									],
									"query": [
										{
											"key": "name",
											"value": "TheCat"
										},
										{
											"key": "image",
											"value": "MMS-backend/images/Cat.PNG"
										},
										{
											"key": "description",
											"value": "Cat sitting"
										},
										{
											"key": "isDamaged",
											"value": "false"
										},
										{
											"key": "worth",
											"value": "5.0"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDonationArtifactValid3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.artifactId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"Dartifact3_id\", jsonData.artifactId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationArtifact?name=TheOrange&image=MMS-backend/images/orange.PNG&description=Orange there&isDamaged=false&worth=15.0&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationArtifact"
									],
									"query": [
										{
											"key": "name",
											"value": "TheOrange"
										},
										{
											"key": "image",
											"value": "MMS-backend/images/orange.PNG"
										},
										{
											"key": "description",
											"value": "Orange there"
										},
										{
											"key": "isDamaged",
											"value": "false"
										},
										{
											"key": "worth",
											"value": "15.0"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDonationArtifactInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationArtifact?name=&image=MMS-backend/images/orange.PNG&description=Orange there&isDamaged=false&worth=15.0&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationArtifact"
									],
									"query": [
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "image",
											"value": "MMS-backend/images/orange.PNG"
										},
										{
											"key": "description",
											"value": "Orange there"
										},
										{
											"key": "isDamaged",
											"value": "false"
										},
										{
											"key": "worth",
											"value": "15.0"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDonationRequestValid1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.requestId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"request1_id\", jsonData.requestId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest?clientUsername=NikolasPasichnik123&artifactId={{Dartifact1_id}}&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "NikolasPasichnik123"
										},
										{
											"key": "artifactId",
											"value": "{{Dartifact1_id}}"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDonationRequestValid2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.requestId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"request2_id\", jsonData.requestId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest?clientUsername=NikolasPasichnik123&artifactId={{Dartifact2_id}}&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "NikolasPasichnik123"
										},
										{
											"key": "artifactId",
											"value": "{{Dartifact2_id}}"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDonationRequestValid3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.requestId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"request3_id\", jsonData.requestId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest?clientUsername=SamanthaInesPerezHoffman&artifactId={{Dartifact3_id}}&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "SamanthaInesPerezHoffman"
										},
										{
											"key": "artifactId",
											"value": "{{Dartifact3_id}}"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDonationRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest?clientUsername=Alexander&artifactId={{Dartifact1_id}}&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "Alexander"
										},
										{
											"key": "artifactId",
											"value": "{{Dartifact1_id}}"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "LoanRequestRestController",
					"item": [
						{
							"name": "createLoanRequestValid1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.requestId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"Lrequest1_id\", jsonData.requestId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest?loanDuration=13&artifactId={{artifact1_id}}&username=SamanthaInesPerezHoffman&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest"
									],
									"query": [
										{
											"key": "loanDuration",
											"value": "13"
										},
										{
											"key": "artifactId",
											"value": "{{artifact1_id}}"
										},
										{
											"key": "username",
											"value": "SamanthaInesPerezHoffman"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createLoanRequestValid2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.requestId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"Lrequest2_id\", jsonData.requestId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest?loanDuration=13&artifactId={{artifact1_id}}&username=NikolasPasichnik123&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest"
									],
									"query": [
										{
											"key": "loanDuration",
											"value": "13"
										},
										{
											"key": "artifactId",
											"value": "{{artifact1_id}}"
										},
										{
											"key": "username",
											"value": "NikolasPasichnik123"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createLoanRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest?loanDuration=14&artifactId=15&username=NikolasPasichnik123&systemId=1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest"
									],
									"query": [
										{
											"key": "loanDuration",
											"value": "14"
										},
										{
											"key": "artifactId",
											"value": "15"
										},
										{
											"key": "username",
											"value": "NikolasPasichnik123"
										},
										{
											"key": "systemId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TicketRestController",
					"item": [
						{
							"name": "createValidTicket1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.ticketId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"ticket1_id\", jsonData.ticketId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket?clientUsername=NikolasPasichnik123",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "NikolasPasichnik123"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidTicket2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.ticketId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"ticket2_id\", jsonData.ticketId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket?clientUsername=SamanthaInesPerezHoffman",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "SamanthaInesPerezHoffman"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidTicket3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.ticketId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"ticket3_id\", jsonData.ticketId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket?clientUsername=SamanthaInesPerezHoffman",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "SamanthaInesPerezHoffman"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidTicket4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.ticketId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"ticket4_id\", jsonData.ticketId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket?clientUsername=SamanthaInesPerezHoffman",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "SamanthaInesPerezHoffman"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidTicket5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.ticketId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"ticket5_id\", jsonData.ticketId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket?clientUsername=NikolasPasichnik123",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "NikolasPasichnik123"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createInvalidTicket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket?clientUsername=weirdPerson",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket"
									],
									"query": [
										{
											"key": "clientUsername",
											"value": "weirdPerson"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EmployeeScheduleRestController",
					"item": [
						{
							"name": "createValidShift1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.shiftId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"shift1_id\", jsonData.shiftId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/createShift?employeeUsername=U123456&day=Monday&startTime=10:00:00&endTime=18:00:00",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"createShift"
									],
									"query": [
										{
											"key": "employeeUsername",
											"value": "U123456"
										},
										{
											"key": "day",
											"value": "Monday"
										},
										{
											"key": "startTime",
											"value": "10:00:00"
										},
										{
											"key": "endTime",
											"value": "18:00:00"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidShift2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.shiftId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"shift2_id\", jsonData.shiftId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/createShift?employeeUsername=U123456&day=Tuesday&startTime=12:00:00&endTime=16:00:00",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"createShift"
									],
									"query": [
										{
											"key": "employeeUsername",
											"value": "U123456"
										},
										{
											"key": "day",
											"value": "Tuesday"
										},
										{
											"key": "startTime",
											"value": "12:00:00"
										},
										{
											"key": "endTime",
											"value": "16:00:00"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createValidShift3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Your test name\", function () {",
											"    pm.expect(jsonData.shiftId).to.greaterThan(0);",
											"});",
											"",
											"pm.collectionVariables.set(\"shift3_id\", jsonData.shiftId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/createShift?employeeUsername=U654321&day=Wednesday&startTime=15:00:00&endTime=17:00:00",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"createShift"
									],
									"query": [
										{
											"key": "employeeUsername",
											"value": "U654321"
										},
										{
											"key": "day",
											"value": "Wednesday"
										},
										{
											"key": "startTime",
											"value": "15:00:00"
										},
										{
											"key": "endTime",
											"value": "17:00:00"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createInvalidShift",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/createShift?employeeUsername=U654321&day=Saturday&startTime=15:00:00&endTime=14:00:00",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"createShift"
									],
									"query": [
										{
											"key": "employeeUsername",
											"value": "U654321"
										},
										{
											"key": "day",
											"value": "Saturday"
										},
										{
											"key": "startTime",
											"value": "15:00:00"
										},
										{
											"key": "endTime",
											"value": "14:00:00"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "MuseumManagementSystemRestController",
					"item": [
						{
							"name": "updateValidMmsName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/{{mms1_id}}/?name=Lucrecia's Museum",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"{{mms1_id}}",
										""
									],
									"query": [
										{
											"key": "name",
											"value": "Lucrecia's Museum"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateInvalidMmsName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/-1/?name=Lucrecia's Museum",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"-1",
										""
									],
									"query": [
										{
											"key": "name",
											"value": "Lucrecia's Museum"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateMmsValidTicketFee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/{{mms1_id}}/fee?ticketFee=69.96",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"{{mms1_id}}",
										"fee"
									],
									"query": [
										{
											"key": "ticketFee",
											"value": "69.96"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateMmsInvalidTicketFee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/{{mms1_id}}/fee?ticketFee=-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"{{mms1_id}}",
										"fee"
									],
									"query": [
										{
											"key": "ticketFee",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "setValidMaxLoanNumberOfSystem",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/setMaxLoanNumber/{{mms1_id}}?maxLoanNumber=8",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"setMaxLoanNumber",
										"{{mms1_id}}"
									],
									"query": [
										{
											"key": "maxLoanNumber",
											"value": "8"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "setInvalidMaxLoanNumberOfSystem",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/setMaxLoanNumber/{{mms1_id}}?maxLoanNumber=-5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"setMaxLoanNumber",
										"{{mms1_id}}"
									],
									"query": [
										{
											"key": "maxLoanNumber",
											"value": "-5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "setValidOpeningHours",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/setOpeningHours/{{mms1_id}}?openTime=06:00:00&closeTime=12:00:00",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"setOpeningHours",
										"{{mms1_id}}"
									],
									"query": [
										{
											"key": "openTime",
											"value": "06:00:00"
										},
										{
											"key": "closeTime",
											"value": "12:00:00"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "setInvalidOpeningHours",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/setOpeningHours/{{mms1_id}}?openTime=16:00:00&closeTime=12:00:00",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"setOpeningHours",
										"{{mms1_id}}"
									],
									"query": [
										{
											"key": "openTime",
											"value": "16:00:00"
										},
										{
											"key": "closeTime",
											"value": "12:00:00"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ManagerAccountRestController",
					"item": [
						{
							"name": "validEditManager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/manager/edit/SireMarwan?name=Fav Prof&password=ecse223Rocks",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"manager",
										"edit",
										"SireMarwan"
									],
									"query": [
										{
											"key": "name",
											"value": "Fav Prof"
										},
										{
											"key": "password",
											"value": "ecse223Rocks"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidEditManager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/manager/edit/bigBankNazia?name=Fav Prof&password=ok",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"manager",
										"edit",
										"bigBankNazia"
									],
									"query": [
										{
											"key": "name",
											"value": "Fav Prof"
										},
										{
											"key": "password",
											"value": "ok"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EmployeeAccountRestController",
					"item": [
						{
							"name": "validEditEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee/edit/U123456?name=Boris V&password=myFavoriteTeacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee",
										"edit",
										"U123456"
									],
									"query": [
										{
											"key": "name",
											"value": "Boris V"
										},
										{
											"key": "password",
											"value": "myFavoriteTeacher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidEditEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee/edit/U123456?name=Boris V&password=ok",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee",
										"edit",
										"U123456"
									],
									"query": [
										{
											"key": "name",
											"value": "Boris V"
										},
										{
											"key": "password",
											"value": "ok"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ClientAccountRestController",
					"item": [
						{
							"name": "editClientValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client/edit/NikolasPasichnik123?name=Boris Vaisband&password=myFavoriteTeacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client",
										"edit",
										"NikolasPasichnik123"
									],
									"query": [
										{
											"key": "name",
											"value": "Boris Vaisband"
										},
										{
											"key": "password",
											"value": "myFavoriteTeacher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "editClientInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client/edit/NikolasPasichnik123?name=Boris Vaisband&password=123",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client",
										"edit",
										"NikolasPasichnik123"
									],
									"query": [
										{
											"key": "name",
											"value": "Boris Vaisband"
										},
										{
											"key": "password",
											"value": "123"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ArtifactRestController",
					"item": [
						{
							"name": "editValidArtifact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/{{artifact2_id}}?name=OrangePainting&description=slices of oranges&image=images/orange.PNG&status=Available&loanFee=10.0&isDamaged=true&worth=150.0&roomId=12&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"{{artifact2_id}}"
									],
									"query": [
										{
											"key": "name",
											"value": "OrangePainting"
										},
										{
											"key": "description",
											"value": "slices of oranges"
										},
										{
											"key": "image",
											"value": "images/orange.PNG"
										},
										{
											"key": "status",
											"value": "Available"
										},
										{
											"key": "loanFee",
											"value": "10.0"
										},
										{
											"key": "isDamaged",
											"value": "true"
										},
										{
											"key": "worth",
											"value": "150.0"
										},
										{
											"key": "roomId",
											"value": "12"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "editInvalidArtifact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/-1?name=OrangePainting&description=slices of oranges&image=images/orange.PNG&status=Available&loanFee=10.0&isDamaged=true&worth=150.0&roomId=12&systemId={{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"-1"
									],
									"query": [
										{
											"key": "name",
											"value": "OrangePainting"
										},
										{
											"key": "description",
											"value": "slices of oranges"
										},
										{
											"key": "image",
											"value": "images/orange.PNG"
										},
										{
											"key": "status",
											"value": "Available"
										},
										{
											"key": "loanFee",
											"value": "10.0"
										},
										{
											"key": "isDamaged",
											"value": "true"
										},
										{
											"key": "worth",
											"value": "150.0"
										},
										{
											"key": "roomId",
											"value": "12"
										},
										{
											"key": "systemId",
											"value": "{{mms1_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DonationRequestRestController",
					"item": [
						{
							"name": "approveDonationRequestValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest/approveRequest/{{request1_id}}?roomId=12",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest",
										"approveRequest",
										"{{request1_id}}"
									],
									"query": [
										{
											"key": "roomId",
											"value": "12"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "approveDonationRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest/approveRequest/{{request1_id}}?roomId=12",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest",
										"approveRequest",
										"{{request1_id}}"
									],
									"query": [
										{
											"key": "roomId",
											"value": "12"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "rejectDonationRequestValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest/rejectRequest/{{request2_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest",
										"rejectRequest",
										"{{request2_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "rejectDonationRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest/rejectRequest/{{request1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest",
										"rejectRequest",
										"{{request1_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "LoanRequestRestController",
					"item": [
						{
							"name": "approveLoanRequestValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest/approveRequest/{{Lrequest1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest",
										"approveRequest",
										"{{Lrequest1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "approveLoanRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest/approveRequest/2000",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest",
										"approveRequest",
										"2000"
									]
								}
							},
							"response": []
						},
						{
							"name": "rejectLoanRequestValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest/rejectRequest/{{Lrequest2_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest",
										"rejectRequest",
										"{{Lrequest2_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "rejectLoanRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest/rejectRequest/{{Lrequest1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest",
										"rejectRequest",
										"{{Lrequest1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "returnLoanedArtifactValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest/loanReturn/{{Lrequest1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest",
										"loanReturn",
										"{{Lrequest1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "returnLoanedArtifactInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest/loanReturn/{{Lrequest2_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest",
										"loanReturn",
										"{{Lrequest2_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TicketRestController",
					"item": [
						{
							"name": "updateValidTicket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket/{{ticket1_id}}?isActive=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket",
										"{{ticket1_id}}"
									],
									"query": [
										{
											"key": "isActive",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateInvalidTicket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket/-1?isActive=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket",
										"-1"
									],
									"query": [
										{
											"key": "isActive",
											"value": "false"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EmployeeScheduleRestController",
					"item": [
						{
							"name": "validUpdateSpecificWeekDayStatus",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/specificWeekDay?day=Friday&isClosed=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"specificWeekDay"
									],
									"query": [
										{
											"key": "day",
											"value": "Friday"
										},
										{
											"key": "isClosed",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidUpdateSpecificWeekDayStatus",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/specificWeekDay?day=Monday&isClosed=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"specificWeekDay"
									],
									"query": [
										{
											"key": "day",
											"value": "Monday"
										},
										{
											"key": "isClosed",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "validUpdateShiftStartEndTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/times/{{shift1_id}}?startTime=10:00:00&endTime=14:00:00",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"times",
										"{{shift1_id}}"
									],
									"query": [
										{
											"key": "startTime",
											"value": "10:00:00"
										},
										{
											"key": "endTime",
											"value": "14:00:00"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidUpdateShiftStartEndTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/times/{{shift1_id}}?startTime=14:00:00&endTime=12:00:00",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"times",
										"{{shift1_id}}"
									],
									"query": [
										{
											"key": "startTime",
											"value": "14:00:00"
										},
										{
											"key": "endTime",
											"value": "12:00:00"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "validUpdateShiftDay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/day/{{shift2_id}}?day=Thursday",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"day",
										"{{shift2_id}}"
									],
									"query": [
										{
											"key": "day",
											"value": "Thursday"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidUpdateShiftDay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/day/{{shift2_id}}?day=Friday",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"day",
										"{{shift2_id}}"
									],
									"query": [
										{
											"key": "day",
											"value": "Friday"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "MuseumManagementSystemRestController",
					"item": [
						{
							"name": "getValidMms",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/getMms/{{mms1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"getMms",
										"{{mms1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "getInvalidMms",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/getMms/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"getMms",
										"-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllMms",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms"
									]
								}
							},
							"response": []
						},
						{
							"name": "getValidSpecificWeekDayByDayType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/DayByDayType?day=Monday",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"DayByDayType"
									],
									"query": [
										{
											"key": "day",
											"value": "Monday"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getInvalidSpecificWeekDayByDayType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/DayByDayType?day=hello",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"DayByDayType"
									],
									"query": [
										{
											"key": "day",
											"value": "hello"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getValidRoom",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/getRoom/12",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"getRoom",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "getInvalidRoom",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/getRoom/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"getRoom",
										"-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllRooms",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/rooms",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"rooms"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllRoomsByValidType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/rooms/type/Small",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"rooms",
										"type",
										"Small"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllRoomsByInvalidType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/rooms/type/notaroom",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"rooms",
										"type",
										"notaroom"
									]
								}
							},
							"response": []
						},
						{
							"name": "getValidMaxLoanNumberOfSystem",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/maxLoanNumber/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"maxLoanNumber",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getInvalidMaxLoanNumberOfSystem",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/maxLoanNumber/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"maxLoanNumber",
										"-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getValidOpeningHours",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/getOpeningHours/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"getOpeningHours",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getInvalidOpeningHours",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/mms/getOpeningHours/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"mms",
										"getOpeningHours",
										"-1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ManagerAccountRestController",
					"item": [
						{
							"name": "validGetManager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/managers",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"managers"
									]
								}
							},
							"response": []
						},
						{
							"name": "validManageSignIn",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/manager/signin/SireMarwan?password=ecse223Rocks",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"manager",
										"signin",
										"SireMarwan"
									],
									"query": [
										{
											"key": "password",
											"value": "ecse223Rocks"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidManageSignIn",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/manager/signin/bigBankNazia?password=iwillmakemoney",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"manager",
										"signin",
										"bigBankNazia"
									],
									"query": [
										{
											"key": "password",
											"value": "iwillmakemoney"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EmployeeAccountRestController",
					"item": [
						{
							"name": "validGetAllEmployees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employees",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employees"
									]
								}
							},
							"response": []
						},
						{
							"name": "validGetEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee/U123456",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee",
										"U123456"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidGetEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee/invalidEmployee",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee",
										"invalidEmployee"
									]
								}
							},
							"response": []
						},
						{
							"name": "validSignInEmployeeAccount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee/signin/U123456/?password=myFavoriteTeacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee",
										"signin",
										"U123456",
										""
									],
									"query": [
										{
											"key": "password",
											"value": "myFavoriteTeacher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidSignInEmployeeAccount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee/signin/U123456/?password=123456789",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee",
										"signin",
										"U123456",
										""
									],
									"query": [
										{
											"key": "password",
											"value": "123456789"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ClientAccountRestController",
					"item": [
						{
							"name": "getClientValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client/NikolasPasichnik123",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client",
										"NikolasPasichnik123"
									]
								}
							},
							"response": []
						},
						{
							"name": "getClientInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client/lucyzhang",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client",
										"lucyzhang"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllClientsValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/clients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "signInClientAccountValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client/signin/NikolasPasichnik123?password=myFavoriteTeacher",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client",
										"signin",
										"NikolasPasichnik123"
									],
									"query": [
										{
											"key": "password",
											"value": "myFavoriteTeacher"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "signInClientAccountInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client/signin/NikolasPasichnik123?password=goodboi1234",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client",
										"signin",
										"NikolasPasichnik123"
									],
									"query": [
										{
											"key": "password",
											"value": "goodboi1234"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ArtifactRestController",
					"item": [
						{
							"name": "getAllArtifacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "getValidArtifactById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/getById?id={{artifact1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"getById"
									],
									"query": [
										{
											"key": "id",
											"value": "{{artifact1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getInvalidArtifactById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/getById?id=-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"getById"
									],
									"query": [
										{
											"key": "id",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getArtifactsByRoomType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/Storage",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"Storage"
									]
								}
							},
							"response": []
						},
						{
							"name": "getArtifactsByValidRoomId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/getArtifactByRoom/12",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"getArtifactByRoom",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "getValidArtifactsByState",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/getByState/true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"getByState",
										"true"
									]
								}
							},
							"response": []
						},
						{
							"name": "getArtifactsByValidStatus",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/getByStatus?status=Available",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"getByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "Available"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DonationRequestRestController",
					"item": [
						{
							"name": "getDonationRequestValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest/{{request1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest",
										"{{request1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "getDonationRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest",
										"-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllDonationRequestsValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequests",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequests"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllDonationRequestsByStatusValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequests/withRequestStatus/Approved",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequests",
										"withRequestStatus",
										"Approved"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllDonationRequestsByStatusInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequests/withRequestStatus/Displayed",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequests",
										"withRequestStatus",
										"Displayed"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllDonationRequestsByClientValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequests/ofClient/NikolasPasichnik123",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequests",
										"ofClient",
										"NikolasPasichnik123"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllDonationRequestsByClientInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequests/ofClient/Alexander",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequests",
										"ofClient",
										"Alexander"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "LoanRequestRestController",
					"item": [
						{
							"name": "getLoanRequestValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest/22",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest",
										"22"
									]
								}
							},
							"response": []
						},
						{
							"name": "getLoanRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequest/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequest",
										"-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllLoanRequestsValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequests",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequests"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllLoanRequestsByStatusValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequests/Status/Rejected",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequests",
										"Status",
										"Rejected"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllLoanRequestsByStatusInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequests/Status/Displayed",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequests",
										"Status",
										"Displayed"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllActiveLoanRequestsValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/activeLoanRequests",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"activeLoanRequests"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllLoanRequestsByClientValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/loanRequests/NikolasPasichnik123",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"loanRequests",
										"NikolasPasichnik123"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TicketRestController",
					"item": [
						{
							"name": "getTicket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket/{{ticket1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket",
										"{{ticket1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "getInvalidTicket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket",
										"-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAllTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tickets",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tickets"
									]
								}
							},
							"response": []
						},
						{
							"name": "getTicketByValidClient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tickets/SamanthaInesPerezHoffman",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tickets",
										"SamanthaInesPerezHoffman"
									]
								}
							},
							"response": []
						},
						{
							"name": "getTicketByInvalidClient",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/tickets/weirdweirdperson",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"tickets",
										"weirdweirdperson"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EmployeeScheduleRestController",
					"item": [
						{
							"name": "validGetAllShifts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift"
									]
								}
							},
							"response": []
						},
						{
							"name": "validGetAllShiftsForEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/employee?employeeUsername=U123456",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"employee"
									],
									"query": [
										{
											"key": "employeeUsername",
											"value": "U123456"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidGetAllShiftsForEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/employee?employeeUsername=invalidUsername",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"employee"
									],
									"query": [
										{
											"key": "employeeUsername",
											"value": "invalidUsername"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "validGetAllShiftsForDay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/day?day=Monday",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"day"
									],
									"query": [
										{
											"key": "day",
											"value": "Monday"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidGetAllShiftsForDay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500s\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/day?day=hello",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"day"
									],
									"query": [
										{
											"key": "day",
											"value": "hello"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "EmployeeScheduleRestController",
					"item": [
						{
							"name": "validDeleteShift",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/deleteShift/{{shift2_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"deleteShift",
										"{{shift2_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "validDeleteAllShiftsForDay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/day?dayType=Monday",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"day"
									],
									"query": [
										{
											"key": "dayType",
											"value": "Monday"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidDeleteAllShiftsForDay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/day?dayType=Hello",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"day"
									],
									"query": [
										{
											"key": "dayType",
											"value": "Hello"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "validDeleteAllShiftsForEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/employee?employeeUsername=U654321",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"employee"
									],
									"query": [
										{
											"key": "employeeUsername",
											"value": "U654321"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidDeleteAllShiftsForEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/shift/employee?employeeUsername=invalidUsername",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"shift",
										"employee"
									],
									"query": [
										{
											"key": "employeeUsername",
											"value": "invalidUsername"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TicketRestController",
					"item": [
						{
							"name": "deleteValidTicket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket/{{ticket1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket",
										"{{ticket1_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteInvalidTicket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/ticket/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"ticket",
										"-1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DonationRequestRestController",
					"item": [
						{
							"name": "deleteRejectedDonationRequestValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest/delete/{{request2_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest",
										"delete",
										"{{request2_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteRejectedDonationRequestInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/donationRequest/delete/{{request1_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"donationRequest",
										"delete",
										"{{request1_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ArtifactRestController",
					"item": [
						{
							"name": "deleteValidArtifact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/{{artifact3_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"{{artifact3_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteInvalidArtifact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/artifacts/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"artifacts",
										"-1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EmployeeAccountRestController",
					"item": [
						{
							"name": "validDeleteEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee/delete/U123456",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee",
										"delete",
										"U123456"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalidDeleteEmployee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/employee/delete/invalidUsername",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"employee",
										"delete",
										"invalidUsername"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ClientAccountRestController",
					"item": [
						{
							"name": "deleteClientValid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client/YuAnlyA",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client",
										"YuAnlyA"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteClientInvalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/client/Alexander",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"client",
										"Alexander"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "ticket1_id",
			"value": ""
		},
		{
			"key": "mms1_id",
			"value": ""
		},
		{
			"key": "manager_id",
			"value": ""
		},
		{
			"key": "employee1_id",
			"value": ""
		},
		{
			"key": "employee2_id",
			"value": ""
		},
		{
			"key": "client1_id",
			"value": ""
		},
		{
			"key": "client2_id",
			"value": ""
		},
		{
			"key": "client3_id",
			"value": ""
		},
		{
			"key": "artifact1_id",
			"value": ""
		},
		{
			"key": "artifact2_id",
			"value": ""
		},
		{
			"key": "artifact3_id",
			"value": ""
		},
		{
			"key": "request1_id",
			"value": ""
		},
		{
			"key": "request2_id",
			"value": ""
		},
		{
			"key": "request3_id",
			"value": ""
		},
		{
			"key": "Lrequest1_id",
			"value": ""
		},
		{
			"key": "Lrequest2_id",
			"value": ""
		},
		{
			"key": "ticket2_id",
			"value": ""
		},
		{
			"key": "ticket3_id",
			"value": ""
		},
		{
			"key": "ticket4_id",
			"value": ""
		},
		{
			"key": "ticket5_id",
			"value": ""
		},
		{
			"key": "shift1_id",
			"value": ""
		},
		{
			"key": "shift2_id",
			"value": ""
		},
		{
			"key": "shift3_id",
			"value": ""
		},
		{
			"key": "Dartifact1_id",
			"value": ""
		},
		{
			"key": "Dartifact2_id",
			"value": ""
		},
		{
			"key": "Dartifact3_id",
			"value": ""
		}
	]
}